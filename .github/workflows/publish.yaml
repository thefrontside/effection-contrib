name: Publish
on:
  push:
    branches:
      - main

jobs:
  generate-matrix:
    name: Generate Job Matrix
    runs-on: ubuntu-latest
    outputs:
      exists: ${{ steps.set-matrix.outputs.exists }}
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4.2.0
        with:
          fetch-depth: 0
          fetch-tags: true
      - uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x
      - run: deno run -A www/tasks/publish-matrix.ts
        id: set-matrix

  jsr:
    if: fromJSON(needs.generate-matrix.outputs.exists)
    name: Publish ${{ matrix.name }}@${{matrix.version}} to JSR
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    needs: [generate-matrix]

    strategy:
      fail-fast: false
      max-parallel: 6
      matrix: ${{fromJSON(needs.generate-matrix.outputs.matrix)}}

    steps:
      - uses: actions/checkout@v4.2.0
      - uses: denoland/setup-deno@v2

      - run: deno publish --token=${{ secrets.JSR_TOKEN }}
        working-directory: ${{ matrix.workspace }}

  npm:
    if: fromJSON(needs.generate-matrix.outputs.exists)
    name: Publish ${{ matrix.name }}@${{matrix.version}} to NPM
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    needs: [generate-matrix]

    strategy:
      fail-fast: false
      max-parallel: 6
      matrix: ${{fromJSON(needs.generate-matrix.outputs.matrix)}}

    steps:
      - uses: actions/checkout@v4.2.0
      - uses: denoland/setup-deno@v2
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
          registry-url: https://registry.npmjs.com

      - run: deno run -A www/tasks/build-npm.ts ${{matrix.workspace}}

      - run: npm publish --access=public --tag=latest
        working-directory: ${{matrix.workspace}}/build/npm
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

  tag:
    if: fromJSON(needs.generate-matrix.outputs.exists)
    name: "Tag Release"
    runs-on: ubuntu-latest
    needs: [generate-matrix, jsr, npm]

    strategy:
      fail-fast: false
      matrix: ${{fromJSON(needs.generate-matrix.outputs.matrix)}}

    steps:
      - uses: actions/checkout@v4.2.0
        with:
          token: ${{secrets.FRONTSIDEJACK_GITHUB_TOKEN}}
      - run: git tag ${{ matrix.tagname }}
      - run: git push origin --tags
